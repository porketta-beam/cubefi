# Task ID: 3
# Title: 임베딩 파이프라인 및 Chroma 벡터 DB 초기화
# Status: done
# Dependencies: None
# Priority: medium
# Description: 세법 문서 크롤링 결과를 text-embedding-3-large 로 임베딩한 뒤 Chroma 0.5 영구 클라이언트에 적재한다.
# Details:
• poetry add chromadb==0.5 openai==1.25 duckdb
• ingest.py
    docs = load_documents("data/tax_docs/*.md")
    embeddings = OpenAIEmbeddings(model="text-embedding-3-large",chunk_size=512)
    vectordb = Chroma(collection_name="tax_docs",embedding_function=embeddings,persist_directory=".chroma")
    vectordb.add_documents(docs)
    vectordb.persist()
• nightly_backup.sh → aws s3 sync .chroma s3://backup

# Test Strategy:
pytest 로 3개 샘플 문서 임베딩 후 vectordb.similarity_search("양도소득세") 결과 top-k>0 확인
S3 모킹으로 백업 스크립트 exit 0 검증

# Subtasks:
## 1. 문서 로더 작성 [done]
### Dependencies: None
### Description: 세법 문서 크롤링 결과를 불러와 텍스트 데이터로 변환하는 로더를 구현합니다.
### Details:
• data/tax_docs/*.md 경로의 마크다운 파일을 읽어 리스트 형태로 반환하는 load_documents 함수를 작성합니다.
• 파일 인코딩, 예외 처리, 텍스트 전처리(불필요한 공백/문자 제거) 등을 포함합니다.

## 2. OpenAI 임베딩 생성 로직 구현 [done]
### Dependencies: 3.1
### Description: 불러온 문서 리스트를 OpenAI text-embedding-3-large 모델로 임베딩하는 로직을 구현합니다.
### Details:
• OpenAIEmbeddings(model="text-embedding-3-large", chunk_size=512) 객체를 생성합니다.
• 문서 리스트를 입력받아 임베딩 벡터 리스트로 변환합니다.
• 임베딩 실패/오류 케이스에 대한 예외 처리를 추가합니다.

## 3. Chroma 컬렉션 초기화 및 적재 [done]
### Dependencies: 3.2
### Description: Chroma 0.5 PersistentClient를 사용해 컬렉션을 초기화하고 임베딩된 문서를 적재합니다.
### Details:
• chromadb.PersistentClient(path=".chroma")로 클라이언트 생성
• 컬렉션 존재 시 삭제 후 재생성, 없으면 새로 생성
• add_documents로 문서와 임베딩, 메타데이터를 컬렉션에 추가
• vectordb.persist()로 영속화 수행

## 4. 영속화 및 S3 백업 스크립트 작성 [done]
### Dependencies: 3.3
### Description: Chroma DB의 영속화된 데이터를 AWS S3로 백업하는 스크립트를 작성합니다.
### Details:
• nightly_backup.sh 스크립트에서 aws s3 sync .chroma s3://backup 명령어 작성
• S3 버킷, IAM 권한, 에러 핸들링, 로그 기록 추가
• 주기적 실행을 위한 크론탭 등록 방법 문서화

## 5. 샘플 데이터 테스트 및 자동화 파이프라인 설정 [done]
### Dependencies: 3.4
### Description: 샘플 문서로 임베딩-적재-검색-백업 전체 파이프라인을 테스트하고, 크론/워크플로 자동화 설정을 완료합니다.
### Details:
• pytest로 3개 샘플 문서 임베딩 후 vectordb.similarity_search("양도소득세") 결과 top-k>0 확인
• S3 모킹으로 백업 스크립트 exit 0 검증
• 전체 파이프라인을 크론탭 또는 워크플로로 자동화, 실패 시 알림 설정

